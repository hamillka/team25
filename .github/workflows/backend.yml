name: CI Pipeline

on:
  push:
  pull_request:

jobs:
  unit_tests:
    name: Unit Tests
    runs-on: ubuntu-22.04
    container:
      image: golang:1.22
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.22

      - name: Run unit tests
        run: |
          cd backend/
          go test ./internal/services/services_test/ -short

  lint:
    name: Linter
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v4
        with:
          go-version: 1.22
          cache: false
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v4
        with:
          version: v1.64
          args: --config=.golangci.yaml ./...
          working-directory: backend/

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: [unit_tests, lint]
    if: github.ref == 'refs/heads/main'
    environment:
      name: prod
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Deploy to server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            cd dicdoc
            git fetch --all
            git reset --hard origin/main
            make
